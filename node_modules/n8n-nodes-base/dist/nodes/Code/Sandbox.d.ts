import { NodeVM, NodeVMOptions } from 'vm2';
import { CodeNodeMode } from './utils';
import type { IExecuteFunctions, IWorkflowDataProxyData, WorkflowExecuteMode } from 'n8n-workflow';
export declare class Sandbox extends NodeVM {
    private nodeMode;
    private jsCode;
    private itemIndex;
    constructor(context: ReturnType<typeof getSandboxContext>, workflowMode: WorkflowExecuteMode, nodeMode: CodeNodeMode);
    static getSandboxOptions(context: ReturnType<typeof getSandboxContext>, workflowMode: WorkflowExecuteMode): NodeVMOptions;
    runCode(jsCode: string, itemIndex?: number): Promise<any>;
    private runCodeAllItems;
    private runCodeEachItem;
}
export declare function getSandboxContext(this: IExecuteFunctions, index?: number): Record<string, unknown> & {
    $item: (i: number) => IWorkflowDataProxyData;
};
