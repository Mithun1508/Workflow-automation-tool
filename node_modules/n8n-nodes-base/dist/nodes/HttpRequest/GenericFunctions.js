"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.binaryContentTypes = exports.getOAuth2AdditionalParameters = exports.replaceNullValues = void 0;
const replaceNullValues = (item) => {
    if (item.json === null) {
        item.json = {};
    }
    return item;
};
exports.replaceNullValues = replaceNullValues;
const getOAuth2AdditionalParameters = (nodeCredentialType) => {
    const oAuth2Options = {
        bitlyOAuth2Api: {
            tokenType: 'Bearer',
        },
        boxOAuth2Api: {
            includeCredentialsOnRefreshOnBody: true,
        },
        ciscoWebexOAuth2Api: {
            tokenType: 'Bearer',
        },
        clickUpOAuth2Api: {
            keepBearer: false,
            tokenType: 'Bearer',
        },
        goToWebinarOAuth2Api: {
            tokenExpiredStatusCode: 403,
        },
        hubspotDeveloperApi: {
            tokenType: 'Bearer',
            includeCredentialsOnRefreshOnBody: true,
        },
        hubspotOAuth2Api: {
            tokenType: 'Bearer',
            includeCredentialsOnRefreshOnBody: true,
        },
        lineNotifyOAuth2Api: {
            tokenType: 'Bearer',
        },
        linkedInOAuth2Api: {
            tokenType: 'Bearer',
        },
        mailchimpOAuth2Api: {
            tokenType: 'Bearer',
        },
        mauticOAuth2Api: {
            includeCredentialsOnRefreshOnBody: true,
        },
        microsoftDynamicsOAuth2Api: {
            property: 'id_token',
        },
        philipsHueOAuth2Api: {
            tokenType: 'Bearer',
        },
        raindropOAuth2Api: {
            includeCredentialsOnRefreshOnBody: true,
        },
        shopifyOAuth2Api: {
            tokenType: 'Bearer',
            keyToIncludeInAccessTokenHeader: 'X-Shopify-Access-Token',
        },
        slackOAuth2Api: {
            tokenType: 'Bearer',
            property: 'authed_user.access_token',
        },
        stravaOAuth2Api: {
            includeCredentialsOnRefreshOnBody: true,
        },
    };
    return oAuth2Options[nodeCredentialType];
};
exports.getOAuth2AdditionalParameters = getOAuth2AdditionalParameters;
exports.binaryContentTypes = [
    'image/',
    'audio/',
    'video/',
    'application/octet-stream',
    'application/gzip',
    'application/zip',
    'application/vnd.rar',
    'application/epub+zip',
    'application/x-bzip',
    'application/x-bzip2',
    'application/x-cdf',
    'application/vnd.amazon.ebook',
    'application/msword',
    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
    'application/vnd.ms-fontobject',
    'application/vnd.oasis.opendocument.presentation',
    'application/pdf',
    'application/x-tar',
    'application/vnd.visio',
    'application/vnd.ms-excel',
    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
    'application/x-7z-compressed',
];
//# sourceMappingURL=GenericFunctions.js.map