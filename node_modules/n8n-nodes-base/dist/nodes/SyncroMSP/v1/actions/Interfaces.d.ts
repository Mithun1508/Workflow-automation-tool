import { AllEntities, Entity, PropertiesOf } from 'n8n-workflow';
declare type SyncroMspMap = {
    contact: 'create' | 'delete' | 'get' | 'getAll' | 'update';
    customer: 'create' | 'delete' | 'get' | 'getAll' | 'update';
    rmm: 'create' | 'delete' | 'get' | 'getAll' | 'mute';
    ticket: 'create' | 'delete' | 'get' | 'getAll' | 'update';
};
export declare type SyncroMsp = AllEntities<SyncroMspMap>;
export declare type SyncroMspMapContact = Entity<SyncroMspMap, 'contact'>;
export declare type SyncroMspMapCustomer = Entity<SyncroMspMap, 'customer'>;
export declare type SyncroMspMapRmm = Entity<SyncroMspMap, 'rmm'>;
export declare type SyncroMspMapTicket = Entity<SyncroMspMap, 'ticket'>;
export declare type ContactProperties = PropertiesOf<SyncroMspMapContact>;
export declare type CustomerProperties = PropertiesOf<SyncroMspMapCustomer>;
export declare type RmmProperties = PropertiesOf<SyncroMspMapRmm>;
export declare type TicketProperties = PropertiesOf<SyncroMspMapTicket>;
export interface IAttachment {
    fields: {
        item?: object[];
    };
    actions: {
        item?: object[];
    };
}
export {};
