import PCancelable from 'p-cancelable';
import { Command } from '@oclif/command';
import { INodeTypes, IRun } from 'n8n-workflow';
import * as Queue from '../src/Queue';
export declare class Worker extends Command {
    static description: string;
    static examples: string[];
    static flags: {
        help: import("@oclif/parser/lib/flags").IBooleanFlag<void>;
        concurrency: import("@oclif/parser/lib/flags").IOptionFlag<number>;
    };
    static runningJobs: {
        [key: string]: PCancelable<IRun>;
    };
    static jobQueue: Queue.JobQueue;
    static processExistCode: number;
    static stopProcess(): Promise<void>;
    runJob(job: Queue.Job, nodeTypes: INodeTypes): Promise<Queue.JobResponse>;
    run(): Promise<void>;
}
