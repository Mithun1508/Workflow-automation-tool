"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CommunityNodes1652254514003 = void 0;
const config = __importStar(require("../../../../config"));
class CommunityNodes1652254514003 {
    constructor() {
        this.name = 'CommunityNodes1652254514003';
    }
    async up(queryRunner) {
        const tablePrefix = config.getEnv('database.tablePrefix');
        await queryRunner.query(`CREATE TABLE \`${tablePrefix}installed_packages\` (` +
            '`packageName` char(214) NOT NULL,' +
            '`installedVersion` char(50) NOT NULL,' +
            '`authorName` char(70) NULL,' +
            '`authorEmail` char(70) NULL,' +
            '`createdAt` datetime NULL DEFAULT CURRENT_TIMESTAMP,' +
            '`updatedAt` datetime NULL DEFAULT CURRENT_TIMESTAMP,' +
            'PRIMARY KEY (\`packageName\`)' +
            ') ENGINE=InnoDB;');
        await queryRunner.query(`CREATE TABLE \`${tablePrefix}installed_nodes\` (` +
            '`name` char(200) NOT NULL,' +
            '`type` char(200) NOT NULL,' +
            "`latestVersion` int NOT NULL DEFAULT '1'," +
            '`package` char(214) NOT NULL,' +
            'PRIMARY KEY (`name`),' +
            `INDEX \`FK_${tablePrefix}73f857fc5dce682cef8a99c11dbddbc969618951\` (\`package\` ASC)` +
            ") ENGINE='InnoDB';");
        await queryRunner.query(`ALTER TABLE \`${tablePrefix}installed_nodes\` ADD CONSTRAINT \`FK_${tablePrefix}73f857fc5dce682cef8a99c11dbddbc969618951\` FOREIGN KEY (\`package\`) REFERENCES \`${tablePrefix}installed_packages\`(\`packageName\`) ON DELETE CASCADE ON UPDATE CASCADE`);
    }
    async down(queryRunner) {
        const tablePrefix = config.getEnv('database.tablePrefix');
        await queryRunner.query(`ALTER TABLE ${tablePrefix}workflow_entity ADD UNIQUE INDEX \`IDX_${tablePrefix}943d8f922be094eb507cb9a7f9\` (\`name\`)`);
        await queryRunner.query(`DROP TABLE "${tablePrefix}installed_nodes"`);
        await queryRunner.query(`DROP TABLE "${tablePrefix}installed_packages"`);
    }
}
exports.CommunityNodes1652254514003 = CommunityNodes1652254514003;
//# sourceMappingURL=1652254514003-CommunityNodes.js.map