"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddWebhookId1611144599516 = void 0;
const config = __importStar(require("../../../../config"));
class AddWebhookId1611144599516 {
    constructor() {
        this.name = 'AddWebhookId1611144599516';
    }
    async up(queryRunner) {
        let tablePrefix = config.getEnv('database.tablePrefix');
        const tablePrefixPure = tablePrefix;
        const schema = config.getEnv('database.postgresdb.schema');
        if (schema) {
            tablePrefix = schema + '.' + tablePrefix;
        }
        await queryRunner.query(`SET search_path TO ${schema};`);
        await queryRunner.query(`ALTER TABLE ${tablePrefix}webhook_entity ADD "webhookId" character varying`);
        await queryRunner.query(`ALTER TABLE ${tablePrefix}webhook_entity ADD "pathLength" integer`);
        await queryRunner.query(`CREATE INDEX IF NOT EXISTS IDX_${tablePrefixPure}16f4436789e804e3e1c9eeb240 ON ${tablePrefix}webhook_entity ("webhookId", "method", "pathLength") `);
    }
    async down(queryRunner) {
        let tablePrefix = config.getEnv('database.tablePrefix');
        const tablePrefixPure = tablePrefix;
        const schema = config.getEnv('database.postgresdb.schema');
        if (schema) {
            tablePrefix = schema + '.' + tablePrefix;
        }
        await queryRunner.query(`SET search_path TO ${schema};`);
        await queryRunner.query(`DROP INDEX IDX_${tablePrefixPure}16f4436789e804e3e1c9eeb240`);
        await queryRunner.query(`ALTER TABLE ${tablePrefix}webhook_entity DROP COLUMN "pathLength"`);
        await queryRunner.query(`ALTER TABLE ${tablePrefix}webhook_entity DROP COLUMN "webhookId"`);
    }
}
exports.AddWebhookId1611144599516 = AddWebhookId1611144599516;
//# sourceMappingURL=1611144599516-AddWebhookId.js.map